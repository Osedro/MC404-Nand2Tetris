// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way ( in = load, sel = address[9..11], a = outdemux0, b = outdemux1, c = outdemux2,
    d = outdemux3, e = outdemux4, f = outdemux5, g =outdemux6, h = outdemux7);

    RAM512 (in = in, load = outdemux0, address = address[0..8], out = outram0);
    RAM512 (in = in, load = outdemux1, address = address[0..8], out = outram1);
    RAM512 (in = in, load = outdemux2, address = address[0..8], out = outram2);
    RAM512 (in = in, load = outdemux3, address = address[0..8], out = outram3);

    RAM512 (in = in, load = outdemux4, address = address[0..8], out = outram4);
    RAM512 (in = in, load = outdemux5, address = address[0..8], out = outram5);
    RAM512 (in = in, load = outdemux6, address = address[0..8], out = outram6);
    RAM512 (in = in, load = outdemux7, address = address[0..8], out = outram7);

    Mux8Way16 ( a = outram0, b = outram1, c = outram2, d = outram3, e = outram4
    , f = outram5, g = outram6, h = outram7, sel = address[9..11], out = out);
}
